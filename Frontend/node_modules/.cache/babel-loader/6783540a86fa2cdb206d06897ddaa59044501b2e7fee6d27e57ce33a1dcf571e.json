{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"textContent\"];\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Title\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"content\"\n}, \"Content\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.onSubmit && $options.onSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"span\", {\n    textContent: _toDisplayString($data.errors)\n  }, null, 8 /* PROPS */, _hoisted_1), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    id: \"title\",\n    type: \"text\",\n    name: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    required: \"\",\n    onKeydown: _cache[1] || (_cache[1] = $event => $data.errors = '')\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    id: \"content\",\n    type: \"textarea\",\n    name: \"content\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.content = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.content]])]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.id = $event),\n    type: \"hidden\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.id]]), _createElementVNode(\"button\", {\n    class: _normalizeClass({\n      'isLoading': $data.isLoading\n    })\n  }, \"Add Note\", 2 /* CLASS */)], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementVNode","for","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","_toDisplayString","$data","errors","_hoisted_2","id","type","name","title","$event","required","onKeydown","_hoisted_3","content","class","_normalizeClass","isLoading"],"sources":["/Users/neilclayton/Documents/Dev/laravel/willsuite/frontend-vue/src/components/NoteForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"onSubmit\">\n    <span v-text=\"errors\"></span>\n    <div>\n        <label for=\"title\">Title</label>\n        <input id=\"title\" type=\"text\" name=\"title\" v-model=\"title\" required @keydown=\"errors = ''\">\n    </div>\n    <div>\n        <label for=\"content\">Content</label>\n        <input id=\"content\" type=\"textarea\" name=\"content\" v-model=\"content\">\n    </div>\n    <input v-model=\"id\" type=\"hidden\">\n    <button v-bind:class=\"{'isLoading' : isLoading}\">Add Note</button>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\n\nexport default {\n    data() {\n        return {\n            title: '',\n            content: '',\n            id: '',\n            errors: '',\n            isLoading: false\n        }\n    },\n    emits: [\"completed\"],\n    props: ['noteId', 'noteTitle', 'noteContent'],\n    watch: {\n        noteId(newId) {\n            this.id = newId;\n        },\n        noteTitle(newTitle) {\n            this.title = newTitle;\n        },\n        noteContent(newContent) {\n            this.content = newContent;\n        }\n    },\n    methods: {\n        onSubmit() {\n            this.isLoading = true\n            if (this.id == '') {\n                this.postNewNote()\n            } else {\n                this.updateNote()\n            }\n        },\n        async postNewNote() {\n            await axios.post(API_BASE_URL + '/notes', this.$data)\n            .then( response => {\n                this.title = '',\n                this.content = '',\n                this.id = '',\n                this.isLoading = false,\n                this.$emit('completed', response.data.data)\n            })\n            .catch(error => {\n                this.errors = error.response.data.errors\n                this.isLoading = false\n            })\n        },\n        async updateNote() {\n            await axios.put(API_BASE_URL + '/notes/' + this.id, this.data)\n            .then (response => {\n                this.title = '',\n                this.content = '',\n                this.id = '',\n                this.isLoading = false, \n                this.$emit('completed', response.data.data)\n            })\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";;gCAIQA,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;gCAIxBD,mBAAA,CAAoC;EAA7BC,GAAG,EAAC;AAAS,GAAC,SAAO;;;uBAPlCC,mBAAA,CAYO;IAZAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAJ,QAAA,IAAAI,QAAA,CAAAJ,QAAA,IAAAG,IAAA,CAAQ;MAC7BN,mBAAA,CAA6B;iBAAvBQ,gBAAA,CAAQC,KAAO,CAAAC,MAAD;uCACpBV,mBAAA,CAGM,cAFFW,UAAgC,E,gBAChCX,mBAAA,CAA2F;IAApFY,EAAE,EAAC,OAAO;IAACC,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,OAAO;+DAAUL,KAAA,CAAAM,KAAK,GAAAC,MAAA;IAAEC,QAAQ,EAAR,EAAQ;IAAEC,SAAO,EAAAd,MAAA,QAAAA,MAAA,MAAAY,MAAA,IAAEP,KAAA,CAAAC,MAAM;iEAAhCD,KAAA,CAAAM,KAAK,E,KAE7Df,mBAAA,CAGM,cAFFmB,UAAoC,E,gBACpCnB,mBAAA,CAAqE;IAA9DY,EAAE,EAAC,SAAS;IAACC,IAAI,EAAC,UAAU;IAACC,IAAI,EAAC,SAAS;+DAAUL,KAAA,CAAAW,OAAO,GAAAJ,MAAA;iDAAPP,KAAA,CAAAW,OAAO,E,qBAEvEpB,mBAAA,CAAkC;+DAAlBS,KAAA,CAAAG,EAAE,GAAAI,MAAA;IAAEH,IAAI,EAAC;iDAATJ,KAAA,CAAAG,EAAE,E,GAClBZ,mBAAA,CAAkE;IAAnDqB,KAAK,EAAAC,eAAA;MAAA,aAAiBb,KAAA,CAAAc;IAAS;KAAG,UAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}