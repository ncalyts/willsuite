{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from '@/config';\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      id: '',\n      errors: '',\n      isLoading: false\n    };\n  },\n  emits: [\"completed\"],\n  props: ['noteId', 'noteTitle', 'noteContent'],\n  watch: {\n    noteId(newId) {\n      this.id = newId;\n    },\n    noteTitle(newTitle) {\n      this.title = newTitle;\n    },\n    noteContent(newContent) {\n      this.content = newContent;\n    }\n  },\n  methods: {\n    onSubmit() {\n      this.isLoading = true;\n      if (this.id == '') {\n        this.postNewNote();\n      } else {\n        this.updateNote();\n      }\n    },\n    async postNewNote() {\n      await axios.post(API_BASE_URL + '/notes', this.$data).then(response => {\n        this.title = '', this.content = '', this.id = '', this.isLoading = false, this.$emit('completed', response.data.data);\n      }).catch(error => {\n        this.errors = error.response.data.errors;\n        this.isLoading = false;\n      });\n    },\n    async updateNote() {\n      await axios.put(API_BASE_URL + '/notes/' + this.id, this.$data).then(response => {\n        if (response.status != 500) {\n          this.title = '', this.content = '', this.id = '', this.isLoading = false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","data","title","content","id","errors","isLoading","emits","props","watch","noteId","newId","noteTitle","newTitle","noteContent","newContent","methods","onSubmit","postNewNote","updateNote","post","$data","then","response","$emit","catch","error","put","status"],"sources":["/Users/neilclayton/Documents/Dev/laravel/willsuite/frontend-vue/src/components/NoteForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"onSubmit\">\n    <span v-text=\"errors\"></span>\n    <div>\n        <label for=\"title\">Title</label>\n        <input id=\"title\" type=\"text\" name=\"title\" v-model=\"title\" required @keydown=\"errors = ''\">\n    </div>\n    <div>\n        <label for=\"content\">Content</label>\n        <input id=\"content\" type=\"textarea\" name=\"content\" v-model=\"content\">\n    </div>\n    <input v-model=\"id\" type=\"hidden\">\n    <button v-bind:class=\"{'isLoading' : isLoading}\">Add Note</button>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\n\nexport default {\n    data() {\n        return {\n            title: '',\n            content: '',\n            id: '',\n            errors: '',\n            isLoading: false\n        }\n    },\n    emits: [\"completed\"],\n    props: ['noteId', 'noteTitle', 'noteContent'],\n    watch: {\n        noteId(newId) {\n            this.id = newId;\n        },\n        noteTitle(newTitle) {\n            this.title = newTitle;\n        },\n        noteContent(newContent) {\n            this.content = newContent;\n        }\n    },\n    methods: {\n        onSubmit() {\n            this.isLoading = true\n            if (this.id == '') {\n                this.postNewNote()\n            } else {\n                this.updateNote()\n            }\n        },\n        async postNewNote() {\n            await axios.post(API_BASE_URL + '/notes', this.$data)\n            .then( response => {\n                this.title = '',\n                this.content = '',\n                this.id = '',\n                this.isLoading = false,\n                this.$emit('completed', response.data.data)\n            })\n            .catch(error => {\n                this.errors = error.response.data.errors\n                this.isLoading = false\n            })\n        },\n        async updateNote() {\n            await axios.put(API_BASE_URL + '/notes/' + this.id, this.$data)\n            .then (response => {\n                if(response.status != 500) {\n                    this.title = '',\n                    this.content = '',\n                    this.id = '',\n                    this.isLoading = false\n                }\n            })\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":"AAiBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,YAAW,QAAS,UAAU;AAEvC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,EAAE,EAAE,EAAE;MACNC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE;IACf;EACJ,CAAC;EACDC,KAAK,EAAE,CAAC,WAAW,CAAC;EACpBC,KAAK,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAE,aAAa,CAAC;EAC7CC,KAAK,EAAE;IACHC,MAAMA,CAACC,KAAK,EAAE;MACV,IAAI,CAACP,EAAC,GAAIO,KAAK;IACnB,CAAC;IACDC,SAASA,CAACC,QAAQ,EAAE;MAChB,IAAI,CAACX,KAAI,GAAIW,QAAQ;IACzB,CAAC;IACDC,WAAWA,CAACC,UAAU,EAAE;MACpB,IAAI,CAACZ,OAAM,GAAIY,UAAU;IAC7B;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,QAAQA,CAAA,EAAG;MACP,IAAI,CAACX,SAAQ,GAAI,IAAG;MACpB,IAAI,IAAI,CAACF,EAAC,IAAK,EAAE,EAAE;QACf,IAAI,CAACc,WAAW,CAAC;MACrB,OAAO;QACH,IAAI,CAACC,UAAU,CAAC;MACpB;IACJ,CAAC;IACD,MAAMD,WAAWA,CAAA,EAAG;MAChB,MAAMnB,KAAK,CAACqB,IAAI,CAACpB,YAAW,GAAI,QAAQ,EAAE,IAAI,CAACqB,KAAK,EACnDC,IAAI,CAAEC,QAAO,IAAK;QACf,IAAI,CAACrB,KAAI,GAAI,EAAE,EACf,IAAI,CAACC,OAAM,GAAI,EAAE,EACjB,IAAI,CAACC,EAAC,GAAI,EAAE,EACZ,IAAI,CAACE,SAAQ,GAAI,KAAK,EACtB,IAAI,CAACkB,KAAK,CAAC,WAAW,EAAED,QAAQ,CAACtB,IAAI,CAACA,IAAI;MAC9C,CAAC,EACAwB,KAAK,CAACC,KAAI,IAAK;QACZ,IAAI,CAACrB,MAAK,GAAIqB,KAAK,CAACH,QAAQ,CAACtB,IAAI,CAACI,MAAK;QACvC,IAAI,CAACC,SAAQ,GAAI,KAAI;MACzB,CAAC;IACL,CAAC;IACD,MAAMa,UAAUA,CAAA,EAAG;MACf,MAAMpB,KAAK,CAAC4B,GAAG,CAAC3B,YAAW,GAAI,SAAQ,GAAI,IAAI,CAACI,EAAE,EAAE,IAAI,CAACiB,KAAK,EAC7DC,IAAG,CAAGC,QAAO,IAAK;QACf,IAAGA,QAAQ,CAACK,MAAK,IAAK,GAAG,EAAE;UACvB,IAAI,CAAC1B,KAAI,GAAI,EAAE,EACf,IAAI,CAACC,OAAM,GAAI,EAAE,EACjB,IAAI,CAACC,EAAC,GAAI,EAAE,EACZ,IAAI,CAACE,SAAQ,GAAI,KAAI;QACzB;MACJ,CAAC;IACL;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}